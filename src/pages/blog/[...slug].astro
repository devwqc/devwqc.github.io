---
import FormattedDate from '@/components/FormattedDate.astro';
import Giscus from '@/components/Giscus.astro';
import MarkDown from '@/components/Markdown.astro';
import PageLayout from '@/layouts/PageLayout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('blog');

  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content } = await post.render();
---

<PageLayout title={post.data.title}>
  <article>
    <header class="flex flex-col gap-3 border-b pb-10 text-center">
      <h1 class="text-4xl font-bold">{post.data.title}</h1>
      <p class="text-gray-500">
        <span>
          작성일:
          <FormattedDate datetime={post.data.pubDate} />
        </span>
        {
          post.data.updatedDate && (
            <span>
              수정일:
              <FormattedDate datetime={post.data.updatedDate} />
            </span>
          )
        }
      </p>
    </header>
    <MarkDown>
      <Content />
    </MarkDown>
    <footer class="pb-10">
      <p>Issue on GitHub</p>
      <p>방문해 주셔서 감사합니다.</p>
      <p>오탈자, 잘못된 정보에 대해 말씀해 주시면 감사히 받겠습니다.</p>
    </footer>
    <Giscus />
  </article>
</PageLayout>
